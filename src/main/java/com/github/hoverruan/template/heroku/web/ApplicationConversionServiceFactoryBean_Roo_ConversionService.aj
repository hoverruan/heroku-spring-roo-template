// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.github.hoverruan.template.heroku.web;

import com.github.hoverruan.template.heroku.domain.Book;
import com.github.hoverruan.template.heroku.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Book, String> ApplicationConversionServiceFactoryBean.getBookToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.github.hoverruan.template.heroku.domain.Book, java.lang.String>() {
            public String convert(Book book) {
                return new StringBuilder().append(book.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Book> ApplicationConversionServiceFactoryBean.getIdToBookConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.github.hoverruan.template.heroku.domain.Book>() {
            public com.github.hoverruan.template.heroku.domain.Book convert(java.lang.Long id) {
                return Book.findBook(id);
            }
        };
    }
    
    public Converter<String, Book> ApplicationConversionServiceFactoryBean.getStringToBookConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.github.hoverruan.template.heroku.domain.Book>() {
            public com.github.hoverruan.template.heroku.domain.Book convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Book.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBookToStringConverter());
        registry.addConverter(getIdToBookConverter());
        registry.addConverter(getStringToBookConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
